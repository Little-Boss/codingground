/* package whatever; // don't place package name! */

import java.util.*;
import java.util.Scanner;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
public class Main{

    public static void main(String []args){
        //alphabet for ciphering
        //String lowerCase = "abcdefghijklmnopqrstuvwxyz ,.?!'():;0123456789";
        String upperCase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ ,.?!'():;0123456789";
        
        Scanner scanner = new Scanner(System.in);
        
        //Strings for key and message
        String keyText = scanner.next().toUpperCase();
        String messageText = "Hello, Mister".toUpperCase();
        String fixedKey = "";
        
        //make key as long as message
        if( messageText.length() < keyText.length() ){
            fixedKey = keyText.substring(0, messageText.length());
        }else{
            for( int i = 0; i < ( messageText.length() / keyText.length() ); i++ ){
                fixedKey += keyText;
            }
            fixedKey += fixedKey.substring(0, messageText.length() - fixedKey.length());
        }
        
        //change to array
        String[] key = new String[fixedKey.length()];
        for( int i = 0; i < fixedKey.length(); i++ ){
            key[i] = fixedKey.substring(i, i + 1);
        }
        String[] message = new String[messageText.length()];
        for( int i = 0; i < messageText.length(); i++ ){
            message[i] = messageText.substring(i, i + 1);
        }
        
        System.out.println("Key: ");
        for(String letter : key)
        {
        	System.out.print(letter + " ");
        	if(upperCase.indexOf(letter) >= 10)
        	{
        		System.out.print(" ");
        	}
        }
        System.out.print("\n");
        for(String index : key)
        {
        	System.out.print(upperCase.indexOf(index) + " ");
        }
        
        System.out.println("\nMessage: ");
        for(String letter : message)
        {
        	System.out.print(letter + " ");
        	if(upperCase.indexOf(letter) >= 10)
        	{
        		System.out.print(" ");
        	}
        }
        System.out.print("\n");
        for(String index : message)
        {
        	System.out.print(upperCase.indexOf(index) + " ");
        }
        
        //change to all caps, and find invalid characters
        /*boolean noInvalid = true;
        for( int i = 0; i < keyText.length(); i++ ){
            if( lowerCase.indexOf(key[i]) >= 0 ){
                key[i] = upperCase.substring(lowerCase.indexOf(key[i]), lowerCase.indexOf(key[i]) + 1);
            }else
            if( lowerCase.indexOf(key[i]) < 0 && upperCase.indexOf(key[i]) < 0 ){
                System.out.println( "Key contains " + "\"" + key[i] + "\"" + ", an invalid characer!" + "\nPlease stick to \"A-Z\", \" \"(space), and \"" + upperCase.substring(27) + "\"\n" );
                noInvalid = false;
            }
        
        }
        for( int i = 0; i < messageText.length(); i++ ){
            if( lowerCase.indexOf(message[i]) >= 0 ){
                message[i] = upperCase.substring(lowerCase.indexOf(message[i]), lowerCase.indexOf(message[i]) + 1);
            }else
            if( lowerCase.indexOf(message[i]) < 0 && upperCase.indexOf(message[i]) < 0 ){
                System.out.println( "Message contains " + "\"" + message[i] + "\"" + ", an invalid characer!" + "\nPlease stick to \"A-Z\", \" \"(space), and \"" + upperCase.substring(27) + "\"\n" );
                noInvalid = false;
            }
        }
        */
        
        //Cipher!!!
        //if( noInvalid ){
            String crypticMessage = "";
            for( int i = 0; i < fixedKey.length(); i++ ){
                if( upperCase.indexOf(message[i]) > upperCase.indexOf(key[i]) ){
                    int position = upperCase.length() - (upperCase.indexOf(message[i]) - upperCase.indexOf(key[i]));
                    crypticMessage += upperCase.substring( position, position + 1 );
                }else
                if( upperCase.indexOf(message[i]) <= upperCase.indexOf(key[i]) ){
                    int position = upperCase.indexOf(key[i]) - upperCase.indexOf(message[i]);
                    crypticMessage += upperCase.substring( position, position + 1 );
                }
            }
            
            System.out.println( "\n\n\n\n" + crypticMessage + "\n\n\n\n" );
        //}
    }
}
